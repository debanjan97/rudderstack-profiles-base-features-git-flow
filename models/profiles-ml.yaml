# This is a sample file, for detailed reference see: https://rudderlabs.github.io/pywht/
models:
  - name: &model_name1 churn_7_days_model
    model_type: python_model
    model_spec:
      occurred_at_col: insert_ts
      entity_key: user
      validity_time: 0s # 1 day
      py_repo_url: /Users/admin/Desktop/Playground/rudderstack_profiles_classifier

      train:
        file_extension: .json
        file_validity: 0s # If the last trained model is older than this, then the model will be trained again,
        inputs: &inputs1
          - models/rudder_user_base_features # inputs to materialise the required data for model
        config:
          data: &model_data_configs1
            label_column: is_churned_7_days # Name of column for which we want to find predictions
            label_value: 1 # Value of label column for which prediction is generated
            package_name: feature_table # Name of the package where the profiles feature table is defined (declared in pb_project.yaml packages)
            prediction_horizon_days: 7 # Number of days in future for which we want to predict
            features_profiles_model: 'rudder_user_base_features' # Model name
            output_profiles_ml_model: *model_name1 # Name of output model based on current model to dinstinguish between multiple models
            # eligible_users: 
            inputs: *inputs1

          
          preprocessing: &model_prep_configs1
            ignore_features:
              - user_email
              - first_name
              - last_name

      predict:
        inputs:
          - models/rudder_user_base_features
        config:
          data: *model_data_configs1 # Use the same config as training
          preprocessing: *model_prep_configs1 # Use the same config as training
          outputs:
            column_names:
              percentile: &percentile_name1 percentile_churn_score_7_days # Name of column in output table having percentile score
              score: churn_score_7_days # Name of column in output table having probabilistic score
            feature_meta_data: &feature_meta_data1
              features:
                - name: *percentile_name1
                  description: 'Percentile of churn score. Higher the percentile, higher the probability of churn'

      <<: *feature_meta_data1

  - name: &model_name2 churn_30_days_model
    model_type: python_model
    model_spec:
      occurred_at_col: insert_ts
      entity_key: user
      validity_time: 24h # 1 day
      py_repo_url: /Users/admin/Desktop/Playground/rudderstack_profiles_classifier

      train:
        file_extension: .json
        file_validity: 0s # If the last trained model is older than this, then the model will be trained again,
        inputs: &inputs2
          - models/rudder_user_base_features # inputs to materialise the required data for model
        config:
          data: &model_data_configs2
            label_column: is_churned_30_days # Name of column for which we want to find predictions
            label_value: 1 # Value of label column for which prediction is generated
            package_name: feature_table # Name of the package where the profiles feature table is defined (declared in pb_project.yaml packages)
            prediction_horizon_days: 30 # Number of days in future for which we want to predict
            features_profiles_model: 'rudder_user_base_features' # Model name
            output_profiles_ml_model: *model_name2 # Name of output model based on current model to dinstinguish between multiple models
            # eligible_users: 
            inputs: *inputs2

          
          preprocessing: &model_prep_configs2
            ignore_features:
              - user_email
              - first_name
              - last_name

      predict:
        inputs:
          - models/rudder_user_base_features
        config:
          data: *model_data_configs2 # Use the same config as training
          preprocessing: *model_prep_configs2 # Use the same config as training
          outputs:
            column_names:
              percentile: &percentile_name2 percentile_churn_score_30_days # Name of column in output table having percentile score
              score: churn_score_30_days # Name of column in output table having probabilistic score
            feature_meta_data: &feature_meta_data2
              features:
                - name: *percentile_name2
                  description: 'Percentile of churn score. Higher the percentile, higher the probability of churn'

      <<: *feature_meta_data2

  - name: &model_name3 churn_90_days_model
    model_type: python_model
    model_spec:
      occurred_at_col: insert_ts
      entity_key: user
      validity_time: 24h # 1 day
      py_repo_url: /Users/admin/Desktop/Playground/rudderstack_profiles_classifier

      train:
        file_extension: .json
        file_validity: 0s # If the last trained model is older than this, then the model will be trained again,
        inputs: &inputs3
          - models/rudder_user_base_features # inputs to materialise the required data for model
        config:
          data: &model_data_configs3
            label_column: is_churned_90_days # Name of column for which we want to find predictions
            label_value: 1 # Value of label column for which prediction is generated
            package_name: feature_table # Name of the package where the profiles feature table is defined (declared in pb_project.yaml packages)
            prediction_horizon_days: 90 # Number of days in future for which we want to predict
            features_profiles_model: 'rudder_user_base_features' # Model name
            output_profiles_ml_model: *model_name3 # Name of output model based on current model to dinstinguish between multiple models
            # eligible_users: 
            inputs: *inputs3

          
          preprocessing: &model_prep_configs3
            ignore_features:
              - user_email
              - first_name
              - last_name

      predict:
        inputs:
          - models/rudder_user_base_features
        config:
          data: *model_data_configs3 # Use the same config as training
          preprocessing: *model_prep_configs3 # Use the same config as training
          outputs:
            column_names:
              percentile: &percentile_name3 percentile_churn_score_90_days # Name of column in output table having percentile score
              score: churn_score_90_days # Name of column in output table having probabilistic score
            feature_meta_data: &feature_meta_data3
              features:
                - name: *percentile_name3
                  description: 'Percentile of churn score. Higher the percentile, higher the probability of churn'

      <<: *feature_meta_data3